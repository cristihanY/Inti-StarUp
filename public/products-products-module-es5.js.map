{"version":3,"sources":["webpack:///src/app/admin/products/components/product-create/product-create.component.ts","webpack:///src/app/admin/products/components/product-create/product-create.component.html","webpack:///src/app/admin/products/components/product-edit/product-edit.component.ts","webpack:///src/app/admin/products/components/product-edit/product-edit.component.html","webpack:///src/app/admin/products/components/products/products.component.ts","webpack:///src/app/admin/products/components/products/products.component.html","webpack:///src/app/admin/products/products-routing.module.ts","webpack:///src/app/admin/products/products.module.ts"],"names":["ProductCreateComponent","formBuilder","productsService","router","storage","categoriesService","categories","buildForm","getCategories","event","preventDefault","form","valid","product","value","createProduct","subscribe","newProduct","navigate","file","target","files","name","fileRef","ref","task","upload","snapshotChanges","pipe","image$","getDownloadURL","url","get","setValue","group","productId","required","minLength","price","isPriceValid","productImg","categoryId","descriptionProduct","stock","active","valueChanges","alert","getAllCategories","category","saveProduct","selector","templateUrl","styleUrls","ProductEditComponent","activatedRoute","params","id","getProduct","imagenlink","patchValue","ProductsComponent","products","displayedColumns","fetchProducts","getAllProducts","deleteProduct","rta","routes","path","component","ProductsRoutingModule","forChild","imports","exports","ProductsModule","declarations"],"mappings":"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","file":"products-products-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AngularFireStorage } from '@angular/fire/storage';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { MyValidators } from './../../../../utils/validators';\nimport { ProductsService } from './../../../../core/services/products/products.service';\nimport { CategoriesService } from 'src/app/core/services/categories.service';\nimport { Category } from 'src/app/core/models/category.model';\n\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.scss']\n})\nexport class ProductCreateComponent implements OnInit {\n\n  form: FormGroup;\n  image$: Observable<any>;\n  categories: Category[]=[];\n  imagenlink: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private productsService: ProductsService,\n    private router: Router,\n    private storage: AngularFireStorage,\n    private categoriesService: CategoriesService,\n  ) {\n    this.buildForm();\n  }\n\n  ngOnInit() {\n    this.getCategories();\n  }\n\n  saveProduct(event: Event) {\n    event.preventDefault();\n    if (this.form.valid) {\n      const product = this.form.value;\n      this.productsService.createProduct(product)\n      .subscribe((newProduct) => {\n        //console.log(newProduct);\n        this.router.navigate(['./admin/products']);\n      });\n    }\n  }\n\n  uploadFile(event) {\n    const file = event.target.files[0];\n    const name = 'image.png';\n    const fileRef = this.storage.ref(name);\n    const task = this.storage.upload(name, file);\n\n    task.snapshotChanges()\n    .pipe(\n      finalize(() => {\n        this.image$ = fileRef.getDownloadURL();\n        this.image$.subscribe(url => {\n          //console.log(url);\n          this.form.get('image').setValue(url);\n        });\n      })\n    )\n    .subscribe();\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      productId: [''],\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      price: ['', [Validators.required, MyValidators.isPriceValid]],\n      productImg: ['', [Validators.required]],\n      categoryId: ['', [Validators.required]],\n      descriptionProduct: ['', [Validators.required, Validators.minLength(10)]],\n      stock: ['', [Validators.required]],\n      active: ['', [Validators.required]]\n    });\n\n    this.form.get('stock').valueChanges\n    .subscribe(value=>{\n      if(value==0){\n        alert(\"No puede crear un producto sin una cantidad\");\n      }\n    })\n  }\n\n  get priceField() {\n    return this.form.get('price');\n  }\n\n  get nameField() {\n    return this.form.get('name');\n  }\n  get descriptionField() {\n    return this.form.get('descriptionProduct');\n  }\n  get categoryIdFiel() {\n    return this.form.get('categoryId');\n  }\n\n  get productImg(){\n    return this.form.get(\"productImg\");\n  }\n  \n  private getCategories(){\n    this.categoriesService.getAllCategories()\n      .subscribe((category)=>{\n          this.categories=category;\n      })\n  }\n\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"saveProduct($event)\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Producto</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n\n      <div class=\"general\">\n        <div class=\"consepto-producto\">\n          <div class=\"row\">\n            <div class=\"col-xs\">\n              <mat-form-field>\n                <input placeholder=\"Nombre\" formControlName=\"name\" matInput type=\"text\">\n              \n                <mat-error *ngIf=\"nameField.hasError('required')\">\n                  Este campo es requerido\n                </mat-error>\n                <mat-error *ngIf=\"nameField.hasError('minlength')\">\n                  Minimo debe tener 3 caracters\n                </mat-error>\n    \n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-xs\">\n              <mat-form-field>\n                <input placeholder=\"Precio\" formControlName=\"price\" matInput type=\"number\">\n                <mat-error *ngIf=\"priceField.hasError('required')\">Este campo es requerido</mat-error>\n                <mat-error *ngIf=\"priceField.hasError('price_invalid')\">no te debes pasar de 10000</mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n    \n          <div class=\"row\">\n            <div class=\"col-xs\">\n              <mat-form-field>\n                <input placeholder=\"Stock\" formControlName=\"stock\" matInput type=\"number\">\n                <mat-error *ngIf=\"priceField.hasError('required')\">Este campo es requerido</mat-error>\n                <mat-error *ngIf=\"priceField.hasError('price_invalid')\">no te debes pasar de 10000</mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n          \n    \n          <div class=\"row\">\n              <div class=\"col-xs\">\n              <mat-form-field >\n                <input style=\"width: 100%;\" placeholder=\"Estado\" formControlName=\"active\" matInput type=\"text\" >\n              </mat-form-field>\n            </div>\n          </div>\n    \n          <div class=\"row\">\n            <div class=\"col-xs\">\n              <mat-form-field>\n                <mat-label>Categoria</mat-label>\n                <mat-select formControlName=\"categoryId\">\n                    <mat-option [value]=\"category.categoryId\" *ngFor=\"let category of categories\">{{category.category}}</mat-option>\n                </mat-select>\n                <mat-error *ngIf=\"categoryIdFiel.hasError('required')\">Este campo es requerido</mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n    \n          <div class=\"row\">\n            <div class=\"col-xs\">\n              <mat-form-field>\n                <textarea placeholder=\"Descripción\" formControlName=\"descriptionProduct\" matInput></textarea>\n                <mat-error *ngIf=\"descriptionField.hasError('required')\">\n                  Este campo es requerido\n                </mat-error>\n                <mat-error *ngIf=\"descriptionField.hasError('minlength')\">\n                  Minimo debe tener 10 caracters\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n    \n          <div class=\"row\">\n            <div class=\"col-xs\">\n              <mat-form-field>\n                <input placeholder=\"Link del imagen\" formControlName=\"productImg\" matInput type=\"text\" value=\"\">\n    \n              </mat-form-field>    \n            </div>\n          </div>\n        </div>\n\n        <div class=\"imagen\">\n          <figure style=\"height: 150px; width: 300px;\">\n            <img src=\"{{productImg.value}}\" alt=\"no imge\" width=\"100%\">\n\n          </figure>\n        </div>\n\n\n      </div>\n     \n\n\n    </mat-card-content>\n    <mat-card-actions>\n      <button [disabled]=\"form.invalid\" mat-raised-button type=\"submit\">Guardar</button>\n    </mat-card-actions>\n  </mat-card>\n  \n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { CategoriesService } from 'src/app/core/services/categories.service';\nimport { MyValidators } from './../../../../utils/validators';\nimport { ProductsService } from './../../../../core/services/products/products.service';\nimport { Category } from 'src/app/core/models/category.model';\nimport { Product } from 'src/app/core/models/product.model';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-product-edit',\n  templateUrl: './product-edit.component.html',\n  styleUrls: ['./product-edit.component.scss']\n})\nexport class ProductEditComponent implements OnInit {\n\n  form: FormGroup;\n  id: number;\n  categories: Category[]=[];\n  imagenlink: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private productsService: ProductsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private categoriesService: CategoriesService,\n  ) {\n    this.buildForm();\n  }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe((params: Params) => {\n      this.id = params.id;\n      //console.log(this.id);\n      this.productsService.getProduct(this.id)\n      .subscribe(product => {\n          this.imagenlink=product.productImg;\n        this.form.patchValue(product);\n      });\n    });\n    this.getCategories();\n  }\n\n  saveProduct(event: Event) {\n    event.preventDefault();\n    if (this.form.valid) {\n      const product = this.form.value;\n      //console.log(product);\n     this.productsService.createProduct( product)\n      .subscribe((newProduct) => {\n        // console.log(newProduct);\n        this.router.navigate(['./admin/products']);\n      });\n    }\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      productId: ['', [Validators.required]],\n      name: ['', [Validators.required]],\n      price: ['', [Validators.required, MyValidators.isPriceValid]],\n      productImg: [''],\n      stock:[''],\n      categoryId: ['comida', [Validators.required]],\n      descriptionProduct: ['', [Validators.required]],\n      active: ['', [Validators.required]]\n    });\n  }\n\n  get priceField() {\n    return this.form.get('price');\n  }\n\n  get productImg(){\n    return this.form.get(\"productImg\");\n  }\n\n  get categoryIdFiel() {\n    return this.form.get('categoryId');\n  }\n  private getCategories(){\n    this.categoriesService.getAllCategories()\n      .subscribe((category)=>{\n          this.categories=category;\n      })\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"saveProduct($event)\">\n    \n\n  \n  <mat-card>\n      <mat-card-header>\n        <mat-card-title>Producto</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n\n        <div class=\"datos-producto\">\n\n           <div class=\"general-producto\">\n            <div class=\"row\">\n\n              <mat-form-field >\n                <input placeholder=\"Nombre\" formControlName=\"name\" matInput type=\"text\">\n              </mat-form-field>\n\n              <mat-form-field>\n                <input placeholder=\"Precio\" formControlName=\"price\" matInput type=\"number\">\n              </mat-form-field>\n          \n\n              <mat-form-field>\n                <mat-label>Categoria</mat-label>\n                <mat-select formControlName=\"categoryId\">\n                    <mat-option [value]=\"category.categoryId\" *ngFor=\"let category of categories\">{{category.category}}</mat-option>\n                </mat-select>\n                <mat-error *ngIf=\"categoryIdFiel.hasError('required')\">Este campo es requerido</mat-error>\n              </mat-form-field>\n     \n\n              <mat-form-field>\n                <input placeholder=\"Stock\" formControlName=\"stock\" matInput type=\"text\">\n              </mat-form-field>\n  \n  \n              <mat-form-field >\n                <input style=\"width: 100%;\" placeholder=\"Estado\" formControlName=\"active\" matInput type=\"text\">\n              </mat-form-field>\n          \n        \n              <mat-form-field >\n                <textarea placeholder=\"Descripción\" formControlName=\"descriptionProduct\" matInput></textarea>\n              </mat-form-field>\n    \n        </div>\n\n            <div class=\"img-deproduci\">\n\n              <figure style=\"height: 150px; width: 400px;\">\n                <img src=\"{{productImg.value}}\" alt=\"no imge\" width=\"100%\">\n\n              </figure>\n            </div>\n           </div>\n\n            \n\n          <div class=\"datos-img\">\n\n              \n                <mat-form-field>\n                  <input placeholder=\"Link del imagen\" formControlName=\"productImg\" matInput type=\"text\" value=\"\">\n\n                </mat-form-field>\n                \n           \n\n          \n          </div>\n\n        </div>\n\n\n      </mat-card-content>\n      <mat-card-actions>\n        <button [disabled]=\"form.invalid\" mat-raised-button type=\"submit\">Guardar</button>\n      </mat-card-actions>\n    </mat-card>\n    \n  </form>\n  ","import { Component, OnInit } from '@angular/core';\n\nimport { ProductsService } from './../../../../core/services/products/products.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  products =  [];\n  displayedColumns: string[] = ['id',\"categoryid\", 'name','image',\"description\",\"stock\", 'price', 'actions'];\n\n  constructor(\n    private productsService: ProductsService\n  ) { }\n\n  ngOnInit() {\n    this.fetchProducts();\n  }\n\n  fetchProducts() {\n    this.productsService.getAllProducts()\n    .subscribe(products => {\n      //console.log(products);\n     this.products = products;\n    });\n  }\n\n  deleteProduct(id: string) {\n    this.productsService.deleteProduct(id)\n    .subscribe(rta => {\n      this.fetchProducts();\n    });\n  }\n\n}\n","<a mat-raised-button routerLink=\"create\">Crear nuevo producto</a>\n<table mat-table [dataSource]=\"products\" class=\"mat-elevation-z8\">\n    \n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef>ID</th>\n    <td mat-cell *matCellDef=\"let product\">{{ product.productId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"categoryid\">\n    <th mat-header-cell *matHeaderCellDef>CategoryId</th>\n    <td mat-cell *matCellDef=\"let product\">{{ product.categoryId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef>Nombre</th>\n    <td mat-cell *matCellDef=\"let product\">{{ product.name }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"image\">\n    <th mat-header-cell *matHeaderCellDef>Imagen</th>\n    <td mat-cell *matCellDef=\"let product\">\n      <img [src]=\"product.productImg\" alt=\"product\" />\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef>Descripción</th>\n    <td mat-cell *matCellDef=\"let product\">{{ product.descriptionProduct }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"stock\">\n    <th mat-header-cell *matHeaderCellDef>Stock</th>\n    <td mat-cell *matCellDef=\"let product\">{{ product.stock }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"price\">\n    <th mat-header-cell *matHeaderCellDef>Precio</th>\n    <td mat-cell *matCellDef=\"let product\">{{ product.price }}</td>\n  </ng-container>\n\n\n  <ng-container matColumnDef=\"actions\">\n    <th mat-header-cell *matHeaderCellDef>Acciones</th>\n    <td mat-cell *matCellDef=\"let product\">\n      <a style=\"margin-right: 2%;\" mat-raised-button [routerLink]=\"['edit', product.productId]\">Editar</a>\n      <button style=\" margin-top: 2%;\"\n        mat-raised-button\n        color=\"warn\"\n        (click)=\"deleteProduct(product._id)\"\n      >\n        Eliminar\n      </button>\n    </td>\n  </ng-container>\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProductsComponent } from './components/products/products.component';\nimport { ProductCreateComponent } from './components/product-create/product-create.component';\nimport { ProductEditComponent } from './components/product-edit/product-edit.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductsComponent\n  },\n  {\n    path: 'create',\n    component: ProductCreateComponent\n  },\n  {\n    path: 'edit/:id',\n    component: ProductEditComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from './../../material/material.module';\nimport { SharedModule } from './../../shared/shared.module';\n\nimport { ProductsRoutingModule } from './products-routing.module';\nimport { ProductsComponent } from './components/products/products.component';\nimport { ProductCreateComponent } from './components/product-create/product-create.component';\nimport { ProductEditComponent } from './components/product-edit/product-edit.component';\n\n\n\n@NgModule({\n  declarations: [\n    ProductsComponent,\n    ProductCreateComponent,\n    ProductEditComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    ProductsRoutingModule,\n    SharedModule\n  ]\n})\nexport class ProductsModule { }\n"]}