{"version":3,"sources":["webpack:///src/app/order/components/order/order.component.ts","webpack:///src/app/order/components/order/order.component.html","webpack:///src/app/order/order-routing.module.ts","webpack:///src/app/order/order.module.ts"],"names":["OrderComponent","cartService","formBuilder","userService","authService","tokenService","compraService","router","cantidad","precioUproducto","subtotal","gastosEnvio","total","carrito","displayedColumns","profile","token","getToken","itemVenta","user","productCarito$","cartProducto$","products$","cart$","buildForm","build1Form","calcularSubtotal","obtenerSubtotal","totalPagar","getProfile","id","deleteCarrito","subscribe","form","patchValue","group","name","required","lastName","numberPhone","address","email","city","district","password","rolClient","conditionCliente","postalCod","valid","value","create","updateclient","console","log","navigate","compraProducto","clienteId","paymentMethod","comment","state","items","obtenerProductos","envioCarrito","createVenta","venta","fire","position","icon","title","showConfirmButton","timer","product","originalCarrito","newCarritoArray","map","productId","quantity","price","active","formProduct","clientId","array","itemsField","push","createItemsField","addressField","createAddressField","zip","text","incrementoCantidad","decrementoCntidad","alert","get","save","aupdateDattos","redireccionar","enviarft","selector","templateUrl","styleUrls","routes","path","component","OrderRoutingModule","forChild","imports","exports","OrderModule","declarations"],"mappings":"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","file":"order-order-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray} from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\n\nimport { Product } from './../../../core/models/product.model';\nimport { Venta } from './../../../core/models/venta.model';\nimport { ItemVenta} from './../../../core/models/itemVenta.model';\nimport { User} from './../../../core/models/user.model';\nimport { CartService } from './../../../core/services/cart.service';\nimport { UserService } from './../../../core/services/user.service';\nimport {ProductCarrito } from './../../../core/models/carrito.model';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport {CompraService} from '../../../core/services/compra.service';\nimport { TokenService } from '../../../core/services/token.service'; \n\n\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.scss']\n})\nexport class OrderComponent implements OnInit {\n\n\n  cantidad: number=1;\n  precioUproducto: number=0;\n  subtotal: number=0;\n  gastosEnvio: number=10;\n  total:number=0;\n\n  compraProducto: Venta;\n \n  products$: Observable<Product[]>;\n  productCarito$: Observable<ProductCarrito[]>;\n  carrito: ProductCarrito[]=  [];\n  displayedColumns: string[] = [ 'name','image', 'price','cantidad','stock', 'actions'];\n\n\n  profile:User| null=null;\n  \n   token = this.tokenService.getToken();\n\n\n  itemVenta: ItemVenta[]=[];\n\n  \n\n  form: FormGroup;\n  formProduct: FormGroup;\n\n  constructor(\n    private cartService: CartService,\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private authService: AuthService,\n    private tokenService: TokenService,\n    private compraService: CompraService,\n    private router: Router,\n  ) {\n    this.productCarito$=this.cartService.cartProducto$;\n    this.products$ = this.cartService.cart$;\n    this.buildForm();\n    this.build1Form();\n  }\n\n  ngOnInit() {\n    const token = this.tokenService.getToken();\n    this.cartService.calcularSubtotal();\n    this.obtenerSubtotal();\n    this.totalPagar();\n    if(token!=null){\n      this.getProfile();\n    }\n    this.build1Form();\n    \n  }\n\n  user: any=[];\n\n  deleteProduct(id: number) {\n    this.cartService.deleteCarrito(id);\n    //console.log(\"imprimimos el id\")\n    //console.log(id);\n    this.obtenerSubtotal();\n    this.totalPagar()\n    \n \n  }\n\n  getProfile(){\n    const token = this.tokenService.getToken();\n    this.authService.profile(token)\n    .subscribe(user=>{\n      this.profile=user;\n      this.form.patchValue(user);\n    });\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      id:[],\n      name: ['', Validators.required],\n      lastName:['', Validators.required],\n      numberPhone:['', Validators.required],\n      address:['', Validators.required],\n      email:['', Validators.required],\n      city:['', Validators.required],\n      district:['', Validators.required],\n      password:['', Validators.required],\n      rolClient:['', Validators.required],\n      conditionCliente:['', Validators.required],\n      postalCod:['',Validators.required],\n    });\n  }\n\naupdateDattos(){\n\n  if(this.form.valid){\n    const value=this.form.value;\n    this.userService.create(value)\n      .subscribe(updateclient=>{\n        console.log(updateclient);\n        this.router.navigate(['/order']);\n      })\n  }\n\n}\n\nredireccionar(){\n  this.router.navigate(['/products'])\n}\n\n\nenvioCarrito(){\n  this.compraProducto={\n    clienteId: this.profile.id,\n    paymentMethod: 'Yape',\n    comment: 'Solicitado',\n    state: 't',\n    items:  this.itemVenta\n  }\n  \n}\n\nenviarft(){\n  \n  this.obtenerProductos();\n  this.envioCarrito();\n //console.log(\"enviando\");\n  this.compraService.createVenta(this.compraProducto)\n  .subscribe(venta=>{\n    console.log(venta);\n  })\n  Swal.fire({\n    position: 'center',\n    icon: 'success',\n    title: 'La compra se ha realizado correctamente.',\n    showConfirmButton: false,\n    timer: 1500\n  })\n  //console.log(\"salimos\")\n  //console.log(this.compraProducto);\n\n  \n}\n\nobtenerProductos(){\n\n this.productCarito$.subscribe(product=>{\n    this.carrito=product;\n  });\n\n  const originalCarrito= this.carrito;\n  const newCarritoArray= originalCarrito.map(items=>{\n    return{\n      productId: items.productId,\n      quantity: items.quantity,\n      total: items.price*items.quantity,\n      active: true,\n    }\n  })\n  this.itemVenta=newCarritoArray;\n}\n\n\n\n  \n  private build1Form(){\n    this.formProduct= this.formBuilder.group({\n      clientId: [''],\n      paymentMethod:[''],\n      comment:[''],\n      state:['true'],\n      items:this.formBuilder.array([])\n\n    });\n  }\n\n\n  \n\n  addItemsField(){\n    this.itemsField.push(this.createItemsField());\n  }\n\n  private createItemsField(){\n    return this.formBuilder.group({\n      productId:['12'],\n      quantity: ['12'],\n      total: ['12'],\n      active: ['true']\n    });\n  }\n\n  get itemsField(){\n    return this.formProduct.get('items') as FormArray;\n  }\n \n\n\n  addAddressField() {\n    this.addressField.push(this.createAddressField());\n  }\n\n  private createAddressField() {\n    return this.formBuilder.group({\n      zip: ['', Validators.required],\n      text: ['1', Validators.required]\n    });\n  }\n\n  get addressField() {\n    return this.form.get('address') as FormArray;\n  }\n\n  save() {\n    console.log(this.form.value);\n  }\n\n  obtenerSubtotal(){\n    this.subtotal=this.cartService.calcularSubtotal();\n  }\n\n  totalPagar(){\n    this.total=this.subtotal+this.gastosEnvio;\n  }\n\n  obtenercatidad(value: number){\n      this.cantidad=value;\n  }\n\n  obtenerPrecioproducto(price: number){\n      this.precioUproducto=price;\n  }\n\n  get numberField(){\n    \n    return this.form.get('number');\n\n  }\n\n\n\n\n  incrementoCantidad(id: number){\n      this.cartService.incrementoCantidad(id);\n      this.obtenerSubtotal();\n      this.totalPagar();\n  }\n\n  decrementoCntidad(id: number){\n    this.cartService.decrementoCntidad(id);\n    this.obtenerSubtotal();\n    this.totalPagar();\n  }\n\n  //agregado al usuario\n\n\n  saves(){\n    \n     console.log(this.formProduct.value);\n  }\n \n\n  sendData(){\n\n  }\n\n  digirAlogin(){\n    alert(\"Inicie sesion o registrese entes de continuar\");\n    this.router.navigate(['/auth/login'])\n  }\n\n  mensajeSug(){\n    alert(\"Agregre al menos un producto\");\n    this.router.navigate(['/products'])\n  }\n}\n","<mat-horizontal-stepper>\n  \n\n    <mat-step >\n      <ng-template matStepLabel>Cesta de la compra</ng-template>\n        \n          <div class=\"section-car\">\n            <table mat-table [dataSource]=\"productCarito$\" class=\"mat-elevation-z8\">\n              <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef>Nombre</th>\n                <td mat-cell *matCellDef=\"let product\">{{ product.name }}</td>\n              </ng-container>\n      \n              <ng-container matColumnDef=\"image\">\n                <th mat-header-cell *matHeaderCellDef>Imagen</th>\n                <td mat-cell *matCellDef=\"let product\">\n                  <img\n                    [src]=\"product.productImg\"\n                    alt=\"product\"\n                    style=\"height: 70px\"\n                  />\n                </td>\n              </ng-container>\n      \n              <ng-container matColumnDef=\"price\">\n                <th mat-header-cell *matHeaderCellDef>Precio U</th>\n                <td mat-cell *matCellDef=\"let product\">{{ product.price }}</td>\n              </ng-container>\n      \n              <ng-container matColumnDef=\"cantidad\">\n                <th mat-header-cell *matHeaderCellDef>cantidad</th>\n      \n                <td mat-cell *matCellDef=\"let product\">\n                  <div class=\"comet-input-number\">\n                    <div class=\"comet-input-number-btn\">\n                      <span (click)=\"decrementoCntidad(product.productId)\" class=\"comet-icon comet-icon-subtract\"\n                        ><svg\n                          viewBox=\"0 0 1024 1024\"\n                          width=\"1em\"\n                          height=\"1em\"\n                          fill=\"currentColor\"\n                          aria-hidden=\"false\"\n                          focusable=\"false\"\n                      >\n                    <path d=\"M864 480a32 32 0 0 1 3.072 63.850667l-3.072 0.149333h-704a32 32 0 0 1-3.072-63.850667L160 480h704z\"></path></svg></span>\n                    </div>\n                    <input type=\"text\" class=\"comet-input-number-input\" value=\"{{product.quantity}}\"/>\n                    <div class=\"comet-input-number-btn\">\n                      <span (click)=\"incrementoCantidad(product.productId)\"  class=\"comet-icon comet-icon-add\"\n                        ><svg\n                          viewBox=\"0 0 1024 1024\"\n                          width=\"1em\"\n                          height=\"1em\"\n                          fill=\"currentColor\"\n                          aria-hidden=\"false\"\n                          focusable=\"false\"\n                        >\n                          <path\n                            d=\"M512 128a32 32 0 0 1 31.850667 28.928l0.149333 3.072v320h320a32 32 0 0 1 3.072 63.850667l-3.072 0.149333h-320v320a32 32 0 0 1-63.850667 3.072L480 864v-320h-320a32 32 0 0 1-3.072-63.850667L160 480h320v-320A32 32 0 0 1 512 128z\"\n                          ></path></svg></span>\n                    </div>\n                  </div>\n                </td>\n              </ng-container>\n      \n              <ng-container matColumnDef=\"stock\">\n                <th mat-header-cell *matHeaderCellDef>stock</th>\n                <td mat-cell *matCellDef=\"let product\">{{ product.stock }}</td>\n              </ng-container>\n      \n              <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef>Opciones</th>\n                <td mat-cell *matCellDef=\"let product\">\n                  <a class=\"a-quitar\" (click)=\"deleteProduct(product.productId)\"\n                    ><mat-icon>delete_forever</mat-icon></a\n                  >\n                </td>\n              </ng-container>\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n            </table>\n            <div class=\"cart-summary\">\n              <div class=\"cart-summary-title\">Resumen</div>\n      \n              <div class=\"cart-summary-list\">\n                <div class=\"cart-summary-item\">\n                  <div class=\"cart-summary-item-label\">Subtotal</div>\n                  <div class=\"cart-summary-item-content\">\n                    <span\n                      style=\"\n                        padding: 0px 2px;\n                        font-size: 14px;\n                        color: rgb(51, 51, 51);\n                      \"\n                      >PEN {{ subtotal | currency }}</span\n                    >\n                  </div>\n                </div>\n                <div class=\"cart-summary-item\">\n                  <div class=\"cart-summary-item-label\">Gastos de envío</div>\n                  <div class=\"cart-summary-item-content\">\n                    <span\n                      style=\"\n                        padding: 0px 2px;\n                        font-size: 14px;\n                        color: rgb(51, 51, 51);\n                      \"\n                      >PEN {{ gastosEnvio | currency }}</span\n                    >\n                  </div>\n                </div>\n                <div class=\"cart-summary-item\">\n                  <div class=\"cart-summary-item-label\">Total a pagar</div>\n                  <div class=\"cart-summary-item-content\">\n                    <span\n                      style=\"\n                        padding: 0px 2px;\n                        font-size: 15px;\n                        color: rgb(51, 51, 51);\n                      \"\n                      >PEN {{ total | currency }}</span\n                    >\n                  </div>\n                </div>\n              </div>\n      \n              <button *ngIf=\"token!=null&& subtotal!=0\" type=\"button\" class=\"cart-summary-button\" matStepperNext>\n                <span>Realizar el pedido</span>\n              </button>\n              <button (click)=\"mensajeSug()\" *ngIf=\"token!=null&& subtotal==0\" type=\"button\" class=\"cart-summary-button\" >\n                <span>Realizar el pedido</span>\n              </button>\n              <button *ngIf=\"token==null\"  (click)=\"digirAlogin()\"  type=\"button\" class=\"cart-summary-button\">\n                <span>Realizar el pedido</span>\n              </button>\n            </div>\n      \n            <!-- <ng-template matStepLabel>Sus productos</ng-template>\n            <div *ngIf=\"products$ | async as products\">\n              <p *ngIf=\"products.length === 0\">no hay productos</p>\n              <div class=\"row\" *ngFor=\"let itemV of itemVenta\">\n                <div class=\"col-xs-12 col-sm-2 col-md-2\">\n                  <div class=\"box\">\n                    <img class=\"image\" [src]=\"\" alt=\"nopaso\" />\n                  </div>\n                </div>\n                <div class=\"col-xs-12 col-sm-5 col-md-5\">\n                  <div class=\"box\">\n                    {{ itemV.quantity }}\n                  </div>\n                </div>\n                <div class=\"col-xs-12 col-sm-5 col-md-5\">\n                  <div class=\"box\">\n                    {{ itemV.total }}\n                  </div>\n                </div>\n                \n              </div>\n            </div>\n        \n            \n                  <ng-template matStepLabel>Sus productos</ng-template>\n            <div *ngIf=\"products$ | async as products\">\n              <p *ngIf=\"products.length === 0\">no hay productos</p>\n              <div class=\"row\" *ngFor=\"let product of products\">\n                <div class=\"col-xs-12 col-sm-2 col-md-2\">\n                  <div class=\"box\">\n                    <img class=\"image\" [src]=\"product.productImg\" alt=\"\" />\n                  </div>\n                </div>\n                <div class=\"col-xs-12 col-sm-5 col-md-5\">\n                  <div class=\"box\">\n                    {{ product.name }}\n                  </div>\n                </div>\n                <div class=\"col-xs-12 col-sm-5 col-md-5\">\n                  <div class=\"box\">\n                    {{ product.price }}\n                  </div>\n                </div>\n                \n              </div>\n            </div>\n            -->\n          </div>\n\n\n    </mat-step>\n\n\n\n\n  <mat-step>\n    <ng-template matStepLabel>Datos personales</ng-template>\n    <form [formGroup]=\"form\" (ngSubmit)=\"save()\">\n      <mat-card>\n        <mat-card-content>\n          <div class=\"content\">\n\n            <h1 class=\"logo\">Añadir nueva <span>Dirección</span></h1>\n    \n            <div class=\"contact-wrapper animated bounceInUp\">\n                <div class=\"contact-form\">\n                    <h3>Verifique sus datos personales</h3>\n                    <div class=\"formsd\">\n\n                          <mat-form-field class=\"ml-20\" appearance=\"standard\" fxFlex=\"33%\" fxFlex.xs=\"100%\">\n                            \n                            <mat-label >Nombre</mat-label>\n                            <input *ngIf=\"profile==null\" matInput>\n                            <input *ngIf=\"profile!=null\"  formControlName=\"name\" matInput value=\"{{profile.name}}\">\n                          </mat-form-field>\n\n\n          \n                          <mat-form-field class=\"ml-20\" appearance=\"standard\" fxFlex=\"33%\" fxFlex.xs=\"100%\">\n                            <mat-label>Apellidos</mat-label>\n                            <input *ngIf=\"profile==null\" matInput>\n                            <input *ngIf=\"profile!=null\" formControlName=\"lastName\"  matInput value=\"{{profile.lastName}}\">\n                          </mat-form-field>\n\n               \n\n                          <mat-form-field class=\"ml-20\" appearance=\"standard\" fxFlex=\"33%\" fxFlex.xs=\"100%\">\n                            <mat-label>Email</mat-label>\n                            <input *ngIf=\"profile==null\" matInput>\n                            <input *ngIf=\"profile!=null\" formControlName=\"email\" type=\"email\" matInput  value=\"{{profile.email}}\"\n                                   placeholder=\"Ejp. perico@example.com\">\n                          </mat-form-field>\n                    \n\n                     \n                          <mat-form-field class=\"ml-20\" appearance=\"standard\" fxFlex=\"33%\" fxFlex.xs=\"100%\">\n                            <mat-label>Número de telefono</mat-label>\n                            <span matPrefix>+51 &nbsp;</span>\n                            <input *ngIf=\"profile==null\" matInput>\n                            <input *ngIf=\"profile!=null\" formControlName=\"numberPhone\" type=\"tel\" matInput placeholder=\"987654321\" value=\"{{profile.numberPhone}}\">\n                            <mat-icon matSuffix>mode_edit</mat-icon>\n                          </mat-form-field>\n              \n                          <mat-form-field class=\"ml-20\" appearance=\"standard\" fxFlex=\"33%\" fxFlex.xs=\"100%\">\n                            <mat-label>Dirección</mat-label>\n                            \n                            <textarea *ngIf=\"profile==null\" matInput></textarea>\n                            <textarea *ngIf=\"profile!=null\" formControlName=\"address\" matInput value=\"{{profile.address}}\"></textarea>\n                          </mat-form-field>\n                      \n\n                         <th></th>\n                           <mat-form-field class=\"ml-20\">\n                              <mat-label>Ciudad</mat-label>\n                              <input *ngIf=\"profile==null\" matInput placeholder=\"Ejp. Ayacucho\" >\n                              <input *ngIf=\"profile!=null\" formControlName=\"city\" matInput placeholder=\"Ejp. Ayacucho\" value=\"{{profile.city}}\">\n                            </mat-form-field>\n\n                           <mat-form-field class=\"ml-20\">\n                              <mat-label>Distrito</mat-label>\n                              <input *ngIf=\"profile==null\" matInput placeholder=\"Ejp. San juan\" >\n                              <input *ngIf=\"profile!=null\" formControlName=\"district\" matInput placeholder=\"Ejp. San juan\" value=\"{{profile.district}}\">\n                            </mat-form-field>\n\n                            <mat-form-field class=\"ml-20\">\n                              <mat-label>Codigo postal</mat-label>\n                              <input *ngIf=\"profile==null\"  matInput placeholder=\"Ejp. 5001\" >\n                              <input *ngIf=\"profile!=null\" formControlName=\"postalCod\" matInput   placeholder=\"Ejp. 5001\" value=\"{{profile.postalCod}}\" >\n                              \n                            </mat-form-field>\n                         \n                      \n                        <p class=\"block\">\n                            <button [disabled]=\"form.invalid\" (click)=\"aupdateDattos()\">\n                                confirmar\n                            </button>\n\n\n                            <button (click)=\"redireccionar()\"  type=\"button\">\n                              cancelar\n                          </button>\n                        </p>\n\n                    </div>\n\n                \n                </div>\n                <div class=\"cart-summary\">\n\n                  <div class=\"cart-summary-title\">Resumen</div>\n          \n                  <div class=\"cart-summary-list\">\n                    <div class=\"cart-summary-item\">\n                      <div class=\"cart-summary-item-label\">Subtotal</div>\n                      <div class=\"cart-summary-item-content\">\n                        <span\n                          style=\"\n                            padding: 0px 2px;\n                            font-size: 14px;\n                            color: rgb(51, 51, 51);\n                          \"\n                          >PEN {{ subtotal | currency }}</span\n                        >\n                      </div>\n                    </div>\n                    <div class=\"cart-summary-item\">\n                      <div class=\"cart-summary-item-label\">Gastos de envío</div>\n                      <div class=\"cart-summary-item-content\">\n                        <span\n                          style=\"\n                            padding: 0px 2px;\n                            font-size: 14px;\n                            color: rgb(51, 51, 51);\n                          \"\n                          >PEN {{ gastosEnvio | currency }}</span\n                        >\n                      </div>\n                    </div>\n                    <div class=\"cart-summary-item\">\n                      <div class=\"cart-summary-item-label\">Total a pagar</div>\n                      <div class=\"cart-summary-item-content\">\n                        <span\n                          style=\"\n                            padding: 0px 2px;\n                            font-size: 15px;\n                            color: rgb(51, 51, 51);\n                          \"\n                          >PEN {{ total | currency }}</span\n                        >\n                      </div>\n                    </div>\n                  </div>\n          \n                  <button [disabled]=\"form.invalid\"  matStepperNext type=\"button\" class=\"cart-summary-button\">\n                    <span  >Pagar</span>\n                  </button>\n                  <mat-error *ngIf=\"form.invalid==true\">\n                    Valida tus datos antes de seguir\n                  </mat-error>\n                </div>\n            </div>\n    \n        </div>\n        </mat-card-content>\n      </mat-card>\n    </form>\n  </mat-step>\n\n  <mat-step>\n    <ng-template matStepLabel>Pago</ng-template>\n\n    \n    \n\n    <div class=\"content\">\n      <h1 class=\"logo\">Añadir nueva <span>Tarjeta</span></h1>\n      <!-- Formulario -->\n      <div class=\"contact-wrapper animated bounceInUp\">\n        <div class=\"contact-form\">\n            <h3>Registrar tarjeta</h3>\n            <div class=\"formsd\">\n\n\n                  <mat-form-field class=\"ml-20\" appearance=\"standard\" fxFlex=\"33%\" fxFlex.xs=\"100%\">\n                    <mat-label>Numero de la targeta</mat-label>\n                    <input matInput>\n                  </mat-form-field>\n\n\n  \n                  <mat-form-field class=\"ml-20\" appearance=\"standard\" fxFlex=\"33%\" fxFlex.xs=\"100%\">\n                    <mat-label>Nombre del titular de la tarjeta</mat-label>\n                    <input matInput>\n                  </mat-form-field>\n\n       \n\n                  <mat-form-field class=\"ml-20\" appearance=\"standard\" fxFlex=\"33%\" fxFlex.xs=\"100%\">\n                    <mat-label>MES</mat-label>\n                    <input type=\"email\" matInput \n                           placeholder=\"Ejp. Enero\">\n                  </mat-form-field>\n            \n                  <mat-form-field class=\"ml-20\" appearance=\"standard\" fxFlex=\"33%\" fxFlex.xs=\"100%\">\n                    <mat-label>AÑO</mat-label>\n                    <input type=\"email\" matInput \n                           placeholder=\"Ejp. 2010\">\n                    \n                  </mat-form-field>\n\n                  <mat-form-field class=\"ml-20\" appearance=\"standard\" fxFlex=\"33%\" fxFlex.xs=\"100%\">\n                    <mat-label>CVV</mat-label>\n                    <input type=\"email\" matInput \n                           placeholder=\"Ejp. 123\">\n                  </mat-form-field>\n              \n                <p class=\"block\">\n                    <button (click)=\"enviarft()\">\n                        Guardar y confirmar\n                    </button>\n                </p>\n            </div>\n\n        \n        </div>\n\n    </div>\n    </div>\n\n  </mat-step>\n</mat-horizontal-stepper>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrderComponent } from './components/order/order.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrderRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OrderRoutingModule } from './order-routing.module';\nimport { OrderComponent } from './components/order/order.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from './../material/material.module';\nimport { SharedModule } from './../shared/shared.module';\n\n@NgModule({\n  declarations: [OrderComponent],\n  imports: [\n    CommonModule,\n    OrderRoutingModule,\n    SharedModule,\n    MaterialModule,\n    ReactiveFormsModule\n  ]\n})\nexport class OrderModule { }\n"]}