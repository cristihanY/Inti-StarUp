{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/components/login/login.component.ts","./src/app/auth/components/login/login.component.html","./src/app/auth/components/register/register.component.ts","./src/app/auth/components/register/register.component.html"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthRoutingModule } from './auth-routing.module';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nimport { MaterialModule } from './../material/material.module';\nimport { SharedModule } from './../shared/shared.module';\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    SharedModule,\n    MaterialModule,\n    ReactiveFormsModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from '../../../core/models/user.model';\n\nimport { AuthService } from './../../../core/services/auth.service';\n\nimport {HeaderComponent} from  '../../../shared/components/header/header.component'\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  showPassword = false;\n  form: FormGroup;\n  token=\"\";\n  profile:User| null=null;\n  password = '';\n  errorMessage='';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService,\n    //private headComponent: HeaderComponent\n  ) {\n    this.buildForm();\n  }\n\n  ngOnInit() {\n  }\n\n  login(event: Event) {\n    //console.log(\"Aqui solicitando1\");\n    event.preventDefault();\n    if (this.form.valid) {\n      //console.log(\"Aqui solicitandod3\");\n      const value = this.form.value;\n      this.authService.loginm(value.email, value.password)\n      .subscribe(name=>{\n        this.token=name.jwt;\n        //console.log(this.token);\n        this.router.navigate(['/home'])\n        //this.headComponent.getProfile();\n      },(error)=>{\n        //console.log(\"hola\",error);\n        this.errorMessage='Error al autenticar vuelva a ingresar los datos correctos'\n        this.form.reset();\n      })\n     ;\n \n    }\n  }\n\n  getProfile(){\n\n    this.authService.profile(this.token)\n    .subscribe(user=>{\n      this.profile=user;\n    });\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n\n  togglePassword() {\n    this.password=this.form.get('password').value;\n    this.showPassword = !this.showPassword;\n  }\n}\n","\n\n\n\n<form [formGroup]=\"form\" (ngSubmit)=\"login($event)\">\n  <div class=\"figure-general-login\">\n    <img class=\"img-logo\" src=\"../../../../assets/svg/intilogo.svg\" alt=\"\">\n  </div>\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Inicia sesión</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <div class=\"row\">\n          <div class=\"col-xs\">\n            <mat-form-field>\n              <mat-label>E-mail</mat-label>\n              <input placeholder=\"email\" formControlName=\"email\" matInput type=\"text\">\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-xs\">\n            <mat-form-field>\n              <mat-label>Contraceña</mat-label>\n              \n              <input placeholder=\"password\" formControlName=\"password\" matInput type=\"password\" *ngIf=\"!showPassword\">\n              <input type=\"text\" formControlName=\"password\" matInput name=\"password1\" [value]=\"password\" *ngIf=\"showPassword\">\n              <mat-icon style=\"cursor:pointer\" (click)=\"togglePassword()\" matSuffix *ngIf=\"!showPassword\">visibility</mat-icon>\n              <mat-icon style=\"cursor:pointer\"  (click)=\"togglePassword()\" matSuffix *ngIf=\"showPassword\">visibility_off</mat-icon>\n            </mat-form-field>\n          </div>\n        </div>\n      </mat-card-content>\n      <mat-card-actions>\n        <button [disabled]=\"form.invalid\" mat-raised-button type=\"submit\">Iniciar sesión</button>\n\n      </mat-card-actions>\n\n\n    </mat-card>\n    <div class=\"cuestions-grid\">\n      <span routerLink=\"/auth/register\" >Crear una cuenta</span>\n      <span >¿Olvidó su contraceña?</span>\n    </div>\n    <span style=\"color: rgb(255, 0, 0);\" *ngIf=\"errorMessage!=''\">\n      {{errorMessage}}\n    </span>\n  </form>\n \n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from './../../../core/services/auth.service';\nimport { UserService} from './../../../core/services/user.service';\nimport { MyValidators } from 'src/app/utils/validators';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\n\n\nexport class RegisterComponent implements OnInit {\n\n  \n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService,\n    private userService: UserService\n  ) {\n    this.buildForm();\n  }\n  buttonPressed = false;\n\n  ngOnInit() {\n    let nextId=0;\n   function generateId() {\n      return nextId++;\n    }\n  }\n imprimir(){\n  console.log(this.form.value);\n }\n\n\n\n\n //generador de id\n\n getRandomLetters(): string {\n  const letters = '0ab1cd2efgh3ijklm4no5pq6rst7uv8wx9yz';\n  let randomLetters = '';\n\n  for (let i = 0; i < 3; i++) {\n    const randomIndex = Math.floor(Math.random() * letters.length);\n    randomLetters += letters[randomIndex];\n  }\n\n  return randomLetters;\n}\n\n\n //generador de id\n\n\n  register() {\n    if (this.form.valid) {\n      const value = this.form.value;\n      //console.log(value);\n      this.userService.create(value)\n      .subscribe(newClient=>{\n        //console.log(newClient);\n        this.router.navigate(['/auth/login']);\n      });\n    }\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      id: [''],\n      name: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.minLength(6), MyValidators.validPassword]],\n      confirmPassword: ['', [Validators.required]],\n      rolClient: ['', [Validators.required]],\n      companyName:['',[Validators.required]],\n      conditionCliente:['true']\n    },{\n      validators: MyValidators.matchPassword\n    });\n\n    this.typeFiel.valueChanges\n      .subscribe(value=>{\n        if(value==='user'){\n\n          this.companyNameFiel.setValidators([Validators.required]);\n        } else{\n          this.companyNameFiel.setValidators(null);\n        }\n        this.companyNameFiel.updateValueAndValidity();\n\n      })\n\n     this.idValue.setValue(this.getRandomLetters()) \n  }\n\n  get idValue(){\n    return this.form.get('id');\n  }\n\n  get typeFiel(){\n    return this.form.get('rolClient');\n  }\n\n  get companyNameFiel(){\n    return this.form.get('companyName');\n  }\n\n  password = '';\n  password1 = '';\n  showPassword = false;\n  showPassword1 = false;\n\n\n  togglePassword() {\n    this.password=this.form.get('password').value;\n    this.showPassword = !this.showPassword;\n  }\n  togglePassword1() {\n    this.password1=this.form.get('confirmPassword').value;\n    this.showPassword1 = !this.showPassword1;\n  }\n\n\n\n  //generador de id\n  \n\n\n}\n\n\n","<form [formGroup]=\"form\" (ngSubmit)=\"register()\">\n\n  <div class=\"figure-general-login\">\n    <img class=\"img-logo\" src=\"../../../../assets/svg/intilogo.svg\" alt=\"\">\n  </div>\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title style=\"margin-left: 130px;\">Registro</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n\n\n      <div class=\"row\">\n        <div class=\"col-xs\">\n          <mat-form-field>\n            <mat-label>Nombre</mat-label>\n            <input placeholder=\"Nombre\" formControlName=\"name\" matInput type=\"email\">\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs\">\n          <mat-form-field>\n            <mat-label>Apellido</mat-label>\n            <input placeholder=\"Apellido\" formControlName=\"lastName\" matInput type=\"email\">\n          </mat-form-field>\n        </div>\n      </div>\n\n\n      <div class=\"row\">\n        <div class=\"col-xs\">\n          <mat-form-field>\n            <mat-label>Email</mat-label>\n            <input placeholder=\"email\" formControlName=\"email\" matInput type=\"email\">\n          </mat-form-field>\n        </div>\n      </div>\n\n\n\n      <div class=\"row\">\n        <div class=\"col-xs\">\n          <mat-form-field>\n            <mat-label>Password</mat-label>\n            <input placeholder=\"password\" formControlName=\"password\" matInput type=\"password\" *ngIf=\"!showPassword\">\n            <input type=\"text\" formControlName=\"password\" matInput name=\"password1\" [value]=\"password\" *ngIf=\"showPassword\">\n            \n            \n            \n            <div *ngIf=\"form.get('password').touched && form.get('password').invalid\">\n\n                <mat-error *ngIf=\"form.get('password').hasError('invalid_password')\">\n                  debe tener un numero en la contraceña\n                </mat-error>\n            </div>\n            <mat-icon  (click)=\"togglePassword()\" matSuffix *ngIf=\"!showPassword\">visibility</mat-icon>\n            <mat-icon (click)=\"togglePassword()\" matSuffix *ngIf=\"showPassword\">visibility_off</mat-icon>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs\">\n          <mat-form-field>\n            <mat-label>Confirm Password</mat-label>\n            <input placeholder=\"password\" formControlName=\"confirmPassword\" matInput type=\"password\" *ngIf=\"!showPassword1\">\n            <input type=\"text\" matInput formControlName=\"confirmPassword\" name=\"password2\" [value]=\"password1\" *ngIf=\"showPassword1\">\n            <div *ngIf=\"form.get('confirmPassword').touched && form.errors\">\n              <mat-error *ngIf=\"form.hasError('match_password')\">\n                La contraceña debe ser igual\n              </mat-error>\n            </div>\n            <mat-icon (click)=\"togglePassword1()\" matSuffix *ngIf=\"!showPassword1\">visibility</mat-icon>\n            <mat-icon (click)=\"togglePassword1()\"  matSuffix *ngIf=\"showPassword1\">visibility_off</mat-icon>\n          </mat-form-field>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-xs\">\n            <mat-radio-group formControlName=\"rolClient\" arial-label=\"Select an option\">\n              <mat-radio-button style=\"margin-right: 10px;\" value=\"client\">Cliente</mat-radio-button>\n              <mat-radio-button value=\"user\">Usuario</mat-radio-button>\n            </mat-radio-group>\n        </div>\n      </div>\n\n      <div *ngIf=\"form.get('rolClient').value==='user'\" class=\"row\">\n        <div class=\"col-xs\">\n          <mat-form-field>\n            <mat-label>Clave de empresa</mat-label>\n            <input placeholder=\"Clave\" formControlName=\"companyName\" matInput type=\"text\">\n          </mat-form-field>\n        </div>\n        <div *ngIf=\"form.get('companyName').value!='inti'\">\n\n          <mat-error *ngIf=\"form.get('companyName').value!='inti'\">\n            No coincide con la clave de la empresa\n          </mat-error>\n      </div>\n      </div>\n\n    </mat-card-content>\n    <mat-card-actions>\n      <button (click)=\"imprimir()\" [disabled]=\"form.invalid\" mat-raised-button type=\"submit\">Registro</button>\n    </mat-card-actions>\n  </mat-card>\n\n</form>\n\n"],"sourceRoot":"webpack:///"}