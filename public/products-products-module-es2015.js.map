{"version":3,"sources":["./src/app/admin/products/components/product-create/product-create.component.ts","./src/app/admin/products/components/product-create/product-create.component.html","./src/app/admin/products/components/product-edit/product-edit.component.ts","./src/app/admin/products/components/product-edit/product-edit.component.html","./src/app/admin/products/components/products/products.component.ts","./src/app/admin/products/components/products/products.component.html","./src/app/admin/products/products-routing.module.ts","./src/app/admin/products/products.module.ts"],"names":[],"mappings":"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","file":"products-products-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AngularFireStorage } from '@angular/fire/storage';\n\nimport { finalize } from 'rxjs/operators';\n\nimport { MyValidators } from './../../../../utils/validators';\nimport { ProductsService } from './../../../../core/services/products/products.service';\nimport { CategoriesService } from 'src/app/core/services/categories.service';\nimport { Category } from 'src/app/core/models/category.model';\n\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.scss']\n})\nexport class ProductCreateComponent implements OnInit {\n\n  form: FormGroup;\n  image$: Observable<any>;\n  categories: Category[]=[];\n  imagenlink: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private productsService: ProductsService,\n    private router: Router,\n    private storage: AngularFireStorage,\n    private categoriesService: CategoriesService,\n  ) {\n    this.buildForm();\n  }\n\n  ngOnInit() {\n    this.getCategories();\n  }\n\n  saveProduct(event: Event) {\n    event.preventDefault();\n    if (this.form.valid) {\n      const product = this.form.value;\n      this.productsService.createProduct(product)\n      .subscribe((newProduct) => {\n        //console.log(newProduct);\n        this.router.navigate(['./admin/products']);\n      });\n    }\n  }\n\n  uploadFile(event) {\n    const file = event.target.files[0];\n    const name = 'image.png';\n    const fileRef = this.storage.ref(name);\n    const task = this.storage.upload(name, file);\n\n    task.snapshotChanges()\n    .pipe(\n      finalize(() => {\n        this.image$ = fileRef.getDownloadURL();\n        this.image$.subscribe(url => {\n          //console.log(url);\n          this.form.get('image').setValue(url);\n        });\n      })\n    )\n    .subscribe();\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      productId: [''],\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      price: ['', [Validators.required, MyValidators.isPriceValid]],\n      productImg: ['', [Validators.required]],\n      categoryId: ['', [Validators.required]],\n      descriptionProduct: ['', [Validators.required, Validators.minLength(10)]],\n      stock: ['', [Validators.required]],\n      active: ['', [Validators.required]]\n    });\n\n    this.form.get('stock').valueChanges\n    .subscribe(value=>{\n      if(value==0){\n        alert(\"No puede crear un producto sin una cantidad\");\n      }\n    })\n  }\n\n  get priceField() {\n    return this.form.get('price');\n  }\n\n  get nameField() {\n    return this.form.get('name');\n  }\n  get descriptionField() {\n    return this.form.get('descriptionProduct');\n  }\n  get categoryIdFiel() {\n    return this.form.get('categoryId');\n  }\n\n  get productImg(){\n    return this.form.get(\"productImg\");\n  }\n  \n  private getCategories(){\n    this.categoriesService.getAllCategories()\n      .subscribe((category)=>{\n          this.categories=category;\n      })\n  }\n\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"saveProduct($event)\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Producto</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n\n      <div class=\"general\">\n        <div class=\"consepto-producto\">\n          <div class=\"row\">\n            <div class=\"col-xs\">\n              <mat-form-field>\n                <input placeholder=\"Nombre\" formControlName=\"name\" matInput type=\"text\">\n              \n                <mat-error *ngIf=\"nameField.hasError('required')\">\n                  Este campo es requerido\n                </mat-error>\n                <mat-error *ngIf=\"nameField.hasError('minlength')\">\n                  Minimo debe tener 3 caracters\n                </mat-error>\n    \n              </mat-form-field>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-xs\">\n              <mat-form-field>\n                <input placeholder=\"Precio\" formControlName=\"price\" matInput type=\"number\">\n                <mat-error *ngIf=\"priceField.hasError('required')\">Este campo es requerido</mat-error>\n                <mat-error *ngIf=\"priceField.hasError('price_invalid')\">no te debes pasar de 10000</mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n    \n          <div class=\"row\">\n            <div class=\"col-xs\">\n              <mat-form-field>\n                <input placeholder=\"Stock\" formControlName=\"stock\" matInput type=\"number\">\n                <mat-error *ngIf=\"priceField.hasError('required')\">Este campo es requerido</mat-error>\n                <mat-error *ngIf=\"priceField.hasError('price_invalid')\">no te debes pasar de 10000</mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n          \n    \n          <div class=\"row\">\n              <div class=\"col-xs\">\n              <mat-form-field >\n                <input style=\"width: 100%;\" placeholder=\"Estado\" formControlName=\"active\" matInput type=\"text\" >\n              </mat-form-field>\n            </div>\n          </div>\n    \n          <div class=\"row\">\n            <div class=\"col-xs\">\n              <mat-form-field>\n                <mat-label>Categoria</mat-label>\n                <mat-select formControlName=\"categoryId\">\n                    <mat-option [value]=\"category.categoryId\" *ngFor=\"let category of categories\">{{category.category}}</mat-option>\n                </mat-select>\n                <mat-error *ngIf=\"categoryIdFiel.hasError('required')\">Este campo es requerido</mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n    \n          <div class=\"row\">\n            <div class=\"col-xs\">\n              <mat-form-field>\n                <textarea placeholder=\"Descripción\" formControlName=\"descriptionProduct\" matInput></textarea>\n                <mat-error *ngIf=\"descriptionField.hasError('required')\">\n                  Este campo es requerido\n                </mat-error>\n                <mat-error *ngIf=\"descriptionField.hasError('minlength')\">\n                  Minimo debe tener 10 caracters\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n    \n          <div class=\"row\">\n            <div class=\"col-xs\">\n              <mat-form-field>\n                <input placeholder=\"Link del imagen\" formControlName=\"productImg\" matInput type=\"text\" value=\"\">\n    \n              </mat-form-field>    \n            </div>\n          </div>\n        </div>\n\n        <div class=\"imagen\">\n          <figure style=\"height: 150px; width: 300px;\">\n            <img src=\"{{productImg.value}}\" alt=\"no imge\" width=\"100%\">\n\n          </figure>\n        </div>\n\n\n      </div>\n     \n\n\n    </mat-card-content>\n    <mat-card-actions>\n      <button [disabled]=\"form.invalid\" mat-raised-button type=\"submit\">Guardar</button>\n    </mat-card-actions>\n  </mat-card>\n  \n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { CategoriesService } from 'src/app/core/services/categories.service';\nimport { MyValidators } from './../../../../utils/validators';\nimport { ProductsService } from './../../../../core/services/products/products.service';\nimport { Category } from 'src/app/core/models/category.model';\nimport { Product } from 'src/app/core/models/product.model';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-product-edit',\n  templateUrl: './product-edit.component.html',\n  styleUrls: ['./product-edit.component.scss']\n})\nexport class ProductEditComponent implements OnInit {\n\n  form: FormGroup;\n  id: number;\n  categories: Category[]=[];\n  imagenlink: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private productsService: ProductsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private categoriesService: CategoriesService,\n  ) {\n    this.buildForm();\n  }\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe((params: Params) => {\n      this.id = params.id;\n      //console.log(this.id);\n      this.productsService.getProduct(this.id)\n      .subscribe(product => {\n          this.imagenlink=product.productImg;\n        this.form.patchValue(product);\n      });\n    });\n    this.getCategories();\n  }\n\n  saveProduct(event: Event) {\n    event.preventDefault();\n    if (this.form.valid) {\n      const product = this.form.value;\n      //console.log(product);\n     this.productsService.createProduct( product)\n      .subscribe((newProduct) => {\n        // console.log(newProduct);\n        this.router.navigate(['./admin/products']);\n      });\n    }\n  }\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n      productId: ['', [Validators.required]],\n      name: ['', [Validators.required]],\n      price: ['', [Validators.required, MyValidators.isPriceValid]],\n      productImg: [''],\n      stock:[''],\n      categoryId: ['comida', [Validators.required]],\n      descriptionProduct: ['', [Validators.required]],\n      active: ['', [Validators.required]]\n    });\n  }\n\n  get priceField() {\n    return this.form.get('price');\n  }\n\n  get productImg(){\n    return this.form.get(\"productImg\");\n  }\n\n  get categoryIdFiel() {\n    return this.form.get('categoryId');\n  }\n  private getCategories(){\n    this.categoriesService.getAllCategories()\n      .subscribe((category)=>{\n          this.categories=category;\n      })\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"saveProduct($event)\">\n    \n\n  \n  <mat-card>\n      <mat-card-header>\n        <mat-card-title>Producto</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n\n        <div class=\"datos-producto\">\n\n           <div class=\"general-producto\">\n            <div class=\"row\">\n\n              <mat-form-field >\n                <input placeholder=\"Nombre\" formControlName=\"name\" matInput type=\"text\">\n              </mat-form-field>\n\n              <mat-form-field>\n                <input placeholder=\"Precio\" formControlName=\"price\" matInput type=\"number\">\n              </mat-form-field>\n          \n\n              <mat-form-field>\n                <mat-label>Categoria</mat-label>\n                <mat-select formControlName=\"categoryId\">\n                    <mat-option [value]=\"category.categoryId\" *ngFor=\"let category of categories\">{{category.category}}</mat-option>\n                </mat-select>\n                <mat-error *ngIf=\"categoryIdFiel.hasError('required')\">Este campo es requerido</mat-error>\n              </mat-form-field>\n     \n\n              <mat-form-field>\n                <input placeholder=\"Stock\" formControlName=\"stock\" matInput type=\"text\">\n              </mat-form-field>\n  \n  \n              <mat-form-field >\n                <input style=\"width: 100%;\" placeholder=\"Estado\" formControlName=\"active\" matInput type=\"text\">\n              </mat-form-field>\n          \n        \n              <mat-form-field >\n                <textarea placeholder=\"Descripción\" formControlName=\"descriptionProduct\" matInput></textarea>\n              </mat-form-field>\n    \n        </div>\n\n            <div class=\"img-deproduci\">\n\n              <figure style=\"height: 150px; width: 400px;\">\n                <img src=\"{{productImg.value}}\" alt=\"no imge\" width=\"100%\">\n\n              </figure>\n            </div>\n           </div>\n\n            \n\n          <div class=\"datos-img\">\n\n              \n                <mat-form-field>\n                  <input placeholder=\"Link del imagen\" formControlName=\"productImg\" matInput type=\"text\" value=\"\">\n\n                </mat-form-field>\n                \n           \n\n          \n          </div>\n\n        </div>\n\n\n      </mat-card-content>\n      <mat-card-actions>\n        <button [disabled]=\"form.invalid\" mat-raised-button type=\"submit\">Guardar</button>\n      </mat-card-actions>\n    </mat-card>\n    \n  </form>\n  ","import { Component, OnInit } from '@angular/core';\n\nimport { ProductsService } from './../../../../core/services/products/products.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  products =  [];\n  displayedColumns: string[] = ['id',\"categoryid\", 'name','image',\"description\",\"stock\", 'price', 'actions'];\n\n  constructor(\n    private productsService: ProductsService\n  ) { }\n\n  ngOnInit() {\n    this.fetchProducts();\n  }\n\n  fetchProducts() {\n    this.productsService.getAllProducts()\n    .subscribe(products => {\n      //console.log(products);\n     this.products = products;\n    });\n  }\n\n  deleteProduct(id: string) {\n    this.productsService.deleteProduct(id)\n    .subscribe(rta => {\n      this.fetchProducts();\n    });\n  }\n\n}\n","<a mat-raised-button routerLink=\"create\">Crear nuevo producto</a>\n<table mat-table [dataSource]=\"products\" class=\"mat-elevation-z8\">\n    \n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef>ID</th>\n    <td mat-cell *matCellDef=\"let product\">{{ product.productId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"categoryid\">\n    <th mat-header-cell *matHeaderCellDef>CategoryId</th>\n    <td mat-cell *matCellDef=\"let product\">{{ product.categoryId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef>Nombre</th>\n    <td mat-cell *matCellDef=\"let product\">{{ product.name }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"image\">\n    <th mat-header-cell *matHeaderCellDef>Imagen</th>\n    <td mat-cell *matCellDef=\"let product\">\n      <img [src]=\"product.productImg\" alt=\"product\" />\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef>Descripción</th>\n    <td mat-cell *matCellDef=\"let product\">{{ product.descriptionProduct }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"stock\">\n    <th mat-header-cell *matHeaderCellDef>Stock</th>\n    <td mat-cell *matCellDef=\"let product\">{{ product.stock }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"price\">\n    <th mat-header-cell *matHeaderCellDef>Precio</th>\n    <td mat-cell *matCellDef=\"let product\">{{ product.price }}</td>\n  </ng-container>\n\n\n  <ng-container matColumnDef=\"actions\">\n    <th mat-header-cell *matHeaderCellDef>Acciones</th>\n    <td mat-cell *matCellDef=\"let product\">\n      <a style=\"margin-right: 2%;\" mat-raised-button [routerLink]=\"['edit', product.productId]\">Editar</a>\n      <button style=\" margin-top: 2%;\"\n        mat-raised-button\n        color=\"warn\"\n        (click)=\"deleteProduct(product._id)\"\n      >\n        Eliminar\n      </button>\n    </td>\n  </ng-container>\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProductsComponent } from './components/products/products.component';\nimport { ProductCreateComponent } from './components/product-create/product-create.component';\nimport { ProductEditComponent } from './components/product-edit/product-edit.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductsComponent\n  },\n  {\n    path: 'create',\n    component: ProductCreateComponent\n  },\n  {\n    path: 'edit/:id',\n    component: ProductEditComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from './../../material/material.module';\nimport { SharedModule } from './../../shared/shared.module';\n\nimport { ProductsRoutingModule } from './products-routing.module';\nimport { ProductsComponent } from './components/products/products.component';\nimport { ProductCreateComponent } from './components/product-create/product-create.component';\nimport { ProductEditComponent } from './components/product-edit/product-edit.component';\n\n\n\n@NgModule({\n  declarations: [\n    ProductsComponent,\n    ProductCreateComponent,\n    ProductEditComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    ProductsRoutingModule,\n    SharedModule\n  ]\n})\nexport class ProductsModule { }\n"],"sourceRoot":"webpack:///"}