{"version":3,"sources":["webpack:///src/app/admin/ventas/components/ventasg-edit/ventasg-edit.component.ts","webpack:///src/app/admin/ventas/components/ventasg-edit/ventasg-edit.component.html","webpack:///src/app/admin/ventas/components/ventasg/ventasg.component.ts","webpack:///src/app/admin/ventas/components/ventasg/ventasg.component.html","webpack:///src/app/admin/ventas/ventas-routing.module.ts","webpack:///src/app/admin/ventas/ventas.module.ts"],"names":["VentasgEditComponent","formBuilder","productsService","router","activatedRoute","categoriesService","compraService","userService","categories","profile","prodBuscado","itemVenta","preciototal","displayedColumns","buildForm","obtenerTodosProduct","params","subscribe","id","getCompraId","venta","purchases","form","patchValue","getProfiles","group","comment","required","clienteId","getClientById","newProfiles","obtenerVentaPedido","originalPedido","console","log","purchase1","generarItems","items","arrayItems","reduce","acc","contenido","total","array","arrayPedido","newItemsPedido","map","item","name","obtenerNombreProducto","productId","quantity","productImg","obtenerImgProduct","descriptionProduct","obtenerDescritionProduct","price","obtenerPriceProduct","active","generarTotalPrice","indexProduct","findIndex","prod","length","getAllProducts","products","selector","templateUrl","styleUrls","VentasgComponent","tokenService","profiles","purchase","fechPurchase","getAllCompras","getAll","newPedido","pedido","purchaseId","clientName","obtenerNombreCliente","date","paymentMethod","state","catidadArray","obtenerCatidadProductos","totalPrice","product","indexClient","client","routes","path","component","VentasRoutingModule","forChild","imports","exports","VentasModule","declarations"],"mappings":"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","file":"ventas-ventas-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { CompraService } from './../../../../core/services/compra.service';\nimport {Product} from '../../../../core/models/product.model'\nimport { CategoriesService } from 'src/app/core/services/categories.service';\nimport { MyValidators } from './../../../../utils/validators';\nimport { ProductsService } from './../../../../core/services/products/products.service';\nimport { Category } from 'src/app/core/models/category.model';\nimport {Venta} from '../../../../core/models/venta.model';\nimport {UserService } from 'src/app/core/services/user.service';\nimport { User } from '../../../../core/models/user.model';\nimport {ItemVenta} from '../../../../core/models/itemVenta.model';\nimport {ItemVentaPedido} from '../../../../core/models/itemVentaPedido';\n\n\n@Component({\n  selector: 'app-ventasg-edit',\n  templateUrl: './ventasg-edit.component.html',\n  styleUrls: ['./ventasg-edit.component.scss']\n})\nexport class VentasgEditComponent implements OnInit {\n\n\n  form: FormGroup;\n  id: number;\n  imagenlink: string;\n  categories: Category[]=[];\n  profile:User| null=null;\n  \n  purchases: Venta;\n  prodBuscado: Product[]=[];\n\n  purchase1: any[];\n  itemVenta: ItemVentaPedido[]=[];\n\n  preciototal=0;\n\n  displayedColumns: string[] = ['name', 'image', 'quantity','price', 'actions'];\n\n  constructor(\n\n    private formBuilder: FormBuilder,\n    private productsService: ProductsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private categoriesService: CategoriesService,\n    private compraService: CompraService,\n    private userService : UserService , \n  ) { \n    this.buildForm()\n  }\n\n  ngOnInit(){\n    this.obtenerTodosProduct();\n    this.activatedRoute.params.subscribe((params: Params) => {\n      this.id = params.id;\n      //console.log(this.id);\n      //console.log(\"llegamos archivos\")\n      this.compraService.getCompraId(this.id)\n        .subscribe(venta=>{\n          this.purchases=venta;\n          //console.log(venta);\n          this.form.patchValue(venta);\n          this.getProfiles();\n        });\n    });\n  }\n\n\n\n  private buildForm() {\n    this.form = this.formBuilder.group({\n\n      comment: ['', [Validators.required]],\n    });\n  }\n\n\n  getProfiles(){\n    //console.log(this.purchases.clienteId);\n    //console.log(\"ejemlos\")\n    const id=this.purchases.clienteId;\n    this.userService.getClientById(id)\n      .subscribe(newProfiles=>{\n       this.profile=newProfiles;\n      // console.log(this.profile);\n       this. obtenerVentaPedido();\n      })\n }\n\n \n\n obtenerVentaPedido(){\n   const originalPedido=this.purchases;\n /*\n   const newPedido=originalPedido.map(pedido=>{\n     return{\n       purchaseId: pedido.purchaseId,\n       clienteId: pedido.clienteId,\n       clientName: this.obtenerNombreCliente(pedido.clienteId),\n       date: pedido.date,\n       paymentMethod: pedido.paymentMethod,\n       comment: pedido.comment,\n       state: pedido.state,\n       catidadArray:this.obtenerCatidadProductos(pedido.items),\n       totalPrice: this.generarTotalPrice(pedido.purchaseId),\n       items: this.generarItems(pedido.items)\n     }\n   });\n   this.purchase1=newPedido;*/\n\n   console.log(this.purchase1);\n   this.generarItems(originalPedido.items);\n }\n\n generarTotalPrice(){\n  \n   let arrayItems=this.purchases.items;\n   return arrayItems.reduce((acc, contenido)=>acc+contenido.total,0);\n }\n\n\n\n generarItems(array:ItemVenta[]){\n\n   const arrayPedido=array;\n   const newItemsPedido=arrayPedido.map(item=>{\n     return{\n       name: this.obtenerNombreProducto(item.productId),\n       quantity: item.quantity,\n       productImg: this.obtenerImgProduct(item.productId),\n       descriptionProduct:this.obtenerDescritionProduct(item.productId),\n       price: this.obtenerPriceProduct(item.productId),\n       total: item.total,\n       active: item.active\n     }\n   });\n  console.log(newItemsPedido);\n  this.preciototal=this.generarTotalPrice();\n  this.itemVenta=newItemsPedido;\n }\n\n\n\n obtenerNombreProducto(id: number){\n   let indexProduct=this.prodBuscado.findIndex(prod=>prod.productId===id);   \n     return this.prodBuscado[indexProduct].name;\n   }\n \n  obtenerImgProduct(id: number){\n   let indexProduct=this.prodBuscado.findIndex(prod=>prod.productId===id);   \n   return this.prodBuscado[indexProduct].productImg;\n  } \n  obtenerDescritionProduct(id: number){\n   let indexProduct=this.prodBuscado.findIndex(prod=>prod.productId===id);   \n   return this.prodBuscado[indexProduct].descriptionProduct;\n  } \n \n  obtenerPriceProduct(id: number){\n   let indexProduct=this.prodBuscado.findIndex(prod=>prod.productId===id);   \n   return this.prodBuscado[indexProduct].price;\n  } \n\n  obtenerNombreCliente(id: string){\n   return this.profile.name;\n\n  }\n\n  obtenerCatidadProductos(array:ItemVenta[]){\n\n   return array.length;\n\n  }\n \n   obtenerTodosProduct(){\n     this.productsService.getAllProducts()\n     .subscribe(products=>{\n       this.prodBuscado=products;\n\n     })\n   }\n \n\n\n\n}\n","<div class=\"info-venta\">\n\n  <div class=\"detalles-venta\">\n    <section>\n      <span *ngIf=\"purchases!=null\">Numero de compra: {{purchases.purchaseId}}</span>\n      <span *ngIf=\"purchases==null\">Numero de compra: --</span>\n    </section>\n    <section>\n      <span *ngIf=\"purchases!=null\">Fecha de compra: {{purchases.date| slice:0:10  }}</span>\n      <span *ngIf=\"purchases==null\">Numero de compra: --</span>\n    </section>\n    <section>\n      <span *ngIf=\"preciototal!=0\">Importe total: PEN {{preciototal|currency}}</span>\n      <span *ngIf=\"preciototal==0\">Importe total: --</span>\n    </section>\n  \n    <section>\n      <span *ngIf=\"purchases!=null\">Metodo de pago: {{purchases.paymentMethod}}</span>\n      <span *ngIf=\"purchases==null\">Metodo de pago: --</span>\n    </section>\n  </div>\n\n  <div class=\"muestra-user\">\n<section>\n  <p style=\"margin-bottom: 5px;\">DATOS DEL CLIENTE</p>\n</section>\n    <section>\n      <span *ngIf=\"profile!=null\">Nombre: {{profile.name}} {{profile.lastName}}</span>\n      <span *ngIf=\"profile==null\">Nombre: --</span>\n    </section>\n   \n    <section>\n      <span *ngIf=\"profile!=null\"> Email: {{profile.email}}</span>\n      <span *ngIf=\"profile==null\">Email: --</span>\n    </section>\n  \n    <section>\n      <span *ngIf=\"profile!=null\">Dirección: {{profile.address}}</span>\n      <span *ngIf=\"profile==null\">Dirección: --</span>\n    </section>\n    <section>\n    </section>\n    <section>\n      <span *ngIf=\"profile!=null\">Numero de telefono: {{profile.numberPhone}}</span>\n      <span *ngIf=\"profile==null\">Numero de telefono: --</span>\n    </section>\n    <section>\n      <span *ngIf=\"profile!=null\">Ciudad: {{profile.city}}</span>\n      <span *ngIf=\"profile==null\">Nombre: --</span>\n    </section>\n    <section>\n      <span *ngIf=\"profile!=null\">Distrito: {{profile.district}}</span>\n      <span *ngIf=\"profile==null\">Distirito: --</span>\n    </section>\n    <section>\n      <span *ngIf=\"profile!=null\">Codigo postal: {{profile.postalCod}}</span>\n      <span *ngIf=\"profile==null\">Codigo postal: --</span>\n    </section>\n  \n  </div>\n</div>\n\n<div class=\"productos\" >\n  <p>Productos de la compra</p>\n  <table mat-table [dataSource]=\"itemVenta\" class=\"mat-elevation-z8 products-table\">\n    \n\n    <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Nombre</th>\n        <td mat-cell *matCellDef=\"let item\">{{ item.name }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"quantity\">\n        <th mat-header-cell *matHeaderCellDef>Catidad</th>\n        <td mat-cell *matCellDef=\"let item\">{{ item.quantity}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"image\">\n    \n        <th mat-header-cell *matHeaderCellDef>Imagen</th>\n        <td mat-cell *matCellDef=\"let item\">\n          <img style=\"width: 120px;\" [src]=\"item.productImg\" alt=\"product\" />\n        </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef>Precio U</th>\n      <td mat-cell *matCellDef=\"let item\">{{ item.price}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"actions\">\n    <th mat-header-cell *matHeaderCellDef>Precio total</th>\n    <td mat-cell *matCellDef=\"let item\">{{ item.total}}</td>\n</ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n</div>\n\n\n<form [formGroup]=\"form\" >\n    <mat-card>\n        <mat-card-content>\n        \n  \n          <div class=\"datos-producto\">\n  \n          <div class=\"general-producto\">\n              <div class=\"row\">\n                <mat-form-field style=\"border:solid 1px rgb(255, 0, 0); padding: 10px;\">\n                  <input placeholder=\"Estado venta\" formControlName=\"comment\" matInput>\n                </mat-form-field>\n              </div>\n          </div>\n          </div>\n  \n        </mat-card-content>\n        <mat-card-actions>\n          <button mat-raised-button type=\"submit\">Guardar</button>\n        </mat-card-actions>\n      </mat-card>\n      \n    </form>\n    ","import { Component, OnInit } from '@angular/core';\nimport { TokenService } from '../../../../core/services/token.service'; \nimport {ItemVenta} from '../../../../core/models/itemVenta.model'\n\nimport { ProductsService } from './../../../../core/services/products/products.service';\nimport { User } from '../../../../core/models/user.model';\nimport { CompraService } from './../../../../core/services/compra.service';\nimport {Venta} from '../../../../core/models/venta.model'\nimport {UserService } from 'src/app/core/services/user.service';\nimport {Product} from '../../../../core/models/product.model'\n\n\n\n@Component({\n  selector: 'app-ventasg',\n  templateUrl: './ventasg.component.html',\n  styleUrls: ['./ventasg.component.scss']\n})\nexport class VentasgComponent implements OnInit {\n\n\n  products =  [];\n  displayedColumns: string[] = ['id',\"clienteId\", 'name','paymetod','date',\"stock\", 'price',\"description\", 'actions'];\n  profiles:User[]| null=null;\n  purchases: Venta[]=[];\n\n\n\n  purchase1: any[];\n  \n  purchase: Venta[] =[];\n  prodBuscado: Product[]=[];\n\n\n  constructor(\n    private productsService: ProductsService,\n    private compraService :CompraService,\n    private tokenService: TokenService,\n    private userService : UserService , \n  ) { }\n\n  ngOnInit() {\n    \n    this.obtenerTodosProduct();\n    this.getProfiles();\n    this.fechPurchase();    \n  }\n\n\n  fechPurchase(){\n    this.compraService.getAllCompras()\n      .subscribe(purchase=>{\n        this.purchases=purchase;\n        this.obtenerVentaPedido();\n      })\n  }\n\n\n\n  getProfiles(){\n     this.userService.getAll()\n       .subscribe(newProfiles=>{\n        this.profiles=newProfiles;\n        //console.log(this.profiles);\n       })\n  }\n\n  \n\n  obtenerVentaPedido(){\n    const originalPedido=this.purchases;\n\n    const newPedido=originalPedido.map(pedido=>{\n      return{\n        purchaseId: pedido.purchaseId,\n        clienteId: pedido.clienteId,\n        clientName: this.obtenerNombreCliente(pedido.clienteId),\n        date: pedido.date,\n        paymentMethod: pedido.paymentMethod,\n        comment: pedido.comment,\n        state: pedido.state,\n        catidadArray:this.obtenerCatidadProductos(pedido.items),\n        totalPrice: this.generarTotalPrice(pedido.purchaseId),\n        items: this.generarItems(pedido.items)\n      }\n    });\n    this.purchase1=newPedido;\n\n    //console.log(this.purchase1);\n  }\n\n  generarTotalPrice(id: number){\n    let indexProduct=this.purchases.findIndex(product=>product.purchaseId==id);\n    let arrayItems=this.purchases[indexProduct].items;\n    return arrayItems.reduce((acc, contenido)=>acc+contenido.total,0);\n  }\n\n\n\n  generarItems(array:ItemVenta[]){\n\n    const arrayPedido=array;\n    const newItemsPedido=arrayPedido.map(item=>{\n      return{\n        name: this.obtenerNombreProducto(item.productId),\n        quantity: item.quantity,\n        productImg: this.obtenerImgProduct(item.productId),\n        descriptionProduct:this.obtenerDescritionProduct(item.productId),\n        price: this.obtenerPriceProduct(item.productId),\n        total: item.total,\n        active: item.active\n      }\n    });\n\n    return newItemsPedido;\n  }\n\n\n\n  obtenerNombreProducto(id: number){\n    let indexProduct=this.prodBuscado.findIndex(prod=>prod.productId===id);   \n      return this.prodBuscado[indexProduct].name;\n    }\n  \n   obtenerImgProduct(id: number){\n    let indexProduct=this.prodBuscado.findIndex(prod=>prod.productId===id);   \n    return this.prodBuscado[indexProduct].productImg;\n   } \n   obtenerDescritionProduct(id: number){\n    let indexProduct=this.prodBuscado.findIndex(prod=>prod.productId===id);   \n    return this.prodBuscado[indexProduct].descriptionProduct;\n   } \n  \n   obtenerPriceProduct(id: number){\n    let indexProduct=this.prodBuscado.findIndex(prod=>prod.productId===id);   \n    return this.prodBuscado[indexProduct].price;\n   } \n\n   obtenerNombreCliente(id: string){\n    let indexClient= this.profiles.findIndex(client=>client.id===id);\n    return this.profiles[indexClient].name;\n\n   }\n\n   obtenerCatidadProductos(array:ItemVenta[]){\n\n    return array.length;\n\n   }\n  \n    obtenerTodosProduct(){\n      this.productsService.getAllProducts()\n      .subscribe(products=>{\n        this.prodBuscado=products;\n\n      })\n    }\n  \n\n  \n}\n","<table mat-table [dataSource]=\"purchase1\" class=\"mat-elevation-z8\">\n    \n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef>ID</th>\n    <td mat-cell *matCellDef=\"let purchase\">{{ purchase.purchaseId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"clienteId\">\n    <th mat-header-cell *matHeaderCellDef>ClientId</th>\n    <td mat-cell *matCellDef=\"let purchase\">{{ purchase.clienteId }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef>Nombre</th>\n    <td mat-cell *matCellDef=\"let purchase\">{{ purchase.clientName }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"paymetod\">\n    <th mat-header-cell *matHeaderCellDef>Metodo de pago</th>\n    <td mat-cell *matCellDef=\"let purchase\">\n      {{purchase.paymentMethod}}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"description\">\n    <th mat-header-cell *matHeaderCellDef>Estado de envio</th>\n    <td mat-cell *matCellDef=\"let purchase\">{{ purchase.comment }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"date\">\n    <th mat-header-cell *matHeaderCellDef>Fecha pedido</th>\n    <td mat-cell *matCellDef=\"let purchase\">{{ purchase.date| slice:0:10  }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"stock\">\n    <th mat-header-cell *matHeaderCellDef>Cantidad</th>\n    <td mat-cell *matCellDef=\"let purchase\">{{ purchase.catidadArray }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"price\">\n    <th mat-header-cell *matHeaderCellDef>Precio total</th>\n    <td mat-cell *matCellDef=\"let purchase\">{{ purchase.totalPrice| currency}}</td>\n  </ng-container>\n\n\n  <ng-container matColumnDef=\"actions\">\n    <th mat-header-cell *matHeaderCellDef>Acciones</th>\n    <td mat-cell *matCellDef=\"let purchase\">\n      <a style=\"margin-right: 2%;\" mat-raised-button [routerLink]=\"['edit', purchase.purchaseId ]\">Verificar</a>\n      <button style=\"margin-top: 2%;\"\n        mat-raised-button\n        color=\"warn\"\n       \n      >\n        Archivar\n      </button>\n    </td>\n  </ng-container>\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {VentasgComponent} from './components/ventasg/ventasg.component';\nimport {VentasgEditComponent} from './components/ventasg-edit/ventasg-edit.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VentasgComponent\n  },\n  {\n    path: 'edit/:id',\n    component: VentasgEditComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VentasRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from './../../material/material.module';\nimport { SharedModule } from './../../shared/shared.module';\n\nimport { VentasRoutingModule } from './ventas-routing.module';\nimport { VentasgComponent } from './components/ventasg/ventasg.component';\nimport { VentasgEditComponent } from './components/ventasg-edit/ventasg-edit.component';\n\n\n@NgModule({\n  declarations: [VentasgComponent, VentasgEditComponent],\n  imports: [\n    CommonModule,\n    VentasRoutingModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    SharedModule\n  ]\n})\nexport class VentasModule { }\n"]}